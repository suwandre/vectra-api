name: Build and Deploy Vectra DEX API

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

jobs:
  verify-sqlx-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Optimized: Use cached SQLx CLI installation instead of cargo install
      - name: Install SQLx CLI (cached)
        uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: sqlx-cli@0.8.6
          locked: true
        
      - name: Verify SQLx cache is up-to-date
        run: |
          cargo sqlx prepare --check --workspace
        env:
          SQLX_OFFLINE: true

  build-and-deploy:
    needs: verify-sqlx-cache
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Optimized: Use BuildKit with GitHub Actions cache
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Optimized: Build and push with cache layers
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/vectra-api:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    # Create deployment package
    - name: Create deployment package
      run: |
        zip -r deploy.zip . -x '*.git*' -x 'target/*' -x '.github/*' -x 'Dockerfile'

    # Deploy to Elastic Beanstalk
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: vectra-api
        environment_name: vectra-api-prod
        version_label: "v${{ github.run_number }}-${{ github.sha }}"
        region: us-east-1
        deployment_package: deploy.zip
